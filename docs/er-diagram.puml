@startuml

skinparam linetype ortho

left to right direction

entity "users" as users {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    name: VARCHAR(100)
    'NOT NULL
    email: VARCHAR(255)
    'NOT NULL, UNIQUE
    password: VARCHAR(255)
    'NOT NULL
    image: VARCHAR(255)
    gender: SMALLINT
    birthday: DATE
    phone: VARCHAR(20)
    city: VARCHAR(100)
    country: VARCHAR(100)
    address: VARCHAR(255)
    role: VARCHAR(50)
    'guest, user, admin / NOT NULL
    status: VARCHAR(50)
    'ACTIVE, INACTIVE, BANNED / NOT NULL
    created_at: TIMESTAMPTZ
    'NOT NULL, DEFAULT now()
    last_login_at: TIMESTAMPTZ
    'NOT NULL
}

entity "promotions" as promotions {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    name: VARCHAR(100)
    'NOT NULL
    discount_type: VARCHART(50)
    'PERCENTAGE, FIXED_AMOUNT / NOT NULL
    discount_value: Integer
    'NOT NULL
    description: VARCHAR(255)
    image_url: VARCHAR(255)
    is_active: BOOLEAN
    'NOT NULL
    start_date: DATE
    'NOT NULL
    end_date: DATE
    'NOT NULL
}

entity "categories" as categories {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    name: VARCHAR(100)
    'NOT NULL
    description: VARCHAR(255)
}


entity "products" as products {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +promotion_id: BIGINT
    'REFERENCES promotions (id) ON DELETE SET NULL
    +category_id: BIGINT
    'REFERENCES categories (id) ON DELETE SET NULL
    ---
    name: VARCHAR(100)
    'NOT NULL
    price: BIGINT
    'NOT NULL
    image_url: VARCHAR(255)
    in_stock: INT
    'NOT NULL, DEFAULT 0
    rating: DOUBLE
    'PRECISION
    sold_count: INT
    short_description: VARCHAR(300)
}

entity "carts" as carts {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +user_id: BIGINT
    'REFERENCES users(id) ON DELETE CASCADE / NOT NULL
    ---
    status: VARCHAR(50)
    'ACTIVE, CHECKED_OUT, ABANDONED / NOT NULL
    created_at: TIMESTAMPTZ 
    'NOT NULL, DEFAULT now()
}

entity "orders" as orders{
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +user_id: BIGINT
    'REFERENCES users(id) / NOT NULL
    ---
    merchant_trade_no VARCHAR(40)
    '你的商店訂單編號（給 ECPay 的 MerchantTradeNo） / UNIQUE, NOT NULL
    amount_cents INTEGER
    '以「分」存 NTD，避免浮點 / NOT NULL
    currency VARCHAR(3)
    'NOT NULL, DEFAULT 'TWD'
    status: VARCHAR(20)
    'PENDING, PAID, CANCELED, EXPIRED, REFUNDING / NOT NULL
    payment_method: VARCHAR(20)
    'CREDIT / NOT NULL
    paid_at: TIMESTAMPTZ
    cancelled_at: TIMESTAMPTZ
    shipping_method: VARCHAR(20)
    'NOT NULL
    shipping_address: VARCHAR(255)
    'NOT NULL
    shipping_status: VARCHAR(30)
    'NOT NULL
    created_at: TIMESTAMPTZ
    'NOT NULL, DEFAULT now()
    updated_at: TIMESTAMPTZ
    'NOT NULL, DEFAULT now()
    tradeDesc: VARCHAR(255)
    '訂單描述
}

entity "payments" as payments {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +order_id: BIGINT
    'REFERENCES orders(id) ON DELETE CASCADE / NOT NULL
    ---
    method: VARCHAR(20)
    'CREDIT, ATM, CVS / NOT NULL
    amount_cents: INTEGER
    'NOT NULL
    status: VARCHAR(20)
    'INIT, WAITING, SUCCESS, FAIL, EXPIRED / NOT NULL
    ecpay_trade_no: VARCHAR(20)
    '綠界回傳 TradeNo
    merchant_trade_no: VARCHAR(40)
    '再存一份方便查 / NOT NULL
    bank_code: VARCHAR(10)
    'ATM專用
    v_account: VARCHAR(30)
    'ATM專用
    payment_no: VARCHAR(30)
    'CVS專用
    expire_at: datetime
    'ATM/CVS 繳款期限
    raw_payload: JSONB
    '最近一次對應的原始payload
    created_at: TIMESTAMPTZ
    'NOT NULL, DEFAULT: now()
    updated_at: TIMESTAMPTZ
    'NOT NULL, DEFAULT: now()
    UNIQUE (merchant_trade_no)
}

entity "payment_transactions" as payment_transactions {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +payment_id: BIGINT
    'REFERENCES payment(id) ON DELETE CASCADE / NOT NULL
    ---
    event_type VARCHAR(30)
    'REQUEST, NOTIFY, QUERY, REFUND, CLOSE / NOT NULL
    event_status VARCHAR(20)
    'SUCCESS , FAIL / NOT NULL
    ecpay_trade_no: VARCHAR(20)
    payload: JSONB
    '完整請求或回應 / NOT NULL
    created_at: TIMESTAMPTZ
    'NOT NULL
}

entity "refunds" as refunds {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +payment_id: BIGINT <<FK>>
    'REFERENCES payments(id) ON DELETE CASCADE / NOT NULL
    ---
    amount_cents: INTEGER
    'NOT NULL
    reason: TEXT
    status: VARCHAR(20)
    'REQUESTED, PROCESSING, SUCCESS, FAIL / NOT NULL
    ecpay_refund_no: VARCHAR(30)
    raw_payload: JSONB
    created_at: TIMESTAMPTZ
    'NOT NULL, DEFAULT: now()
}

entity "webhook_events" as webhook_events {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    provider VARCHAR(20)
    'ECPAY / NOT NULL
    event_key VARCHAR(100)
    '例如 TradeNo 或 TradeNo+RtnCode+guts / NOT NULL
    payload: JSONB
    'NOT NULL
    processed: BOOLEAN
    'NOT NULL, DEFAULT false
    created_at: TIMESTAMPTZ
    'NOT NULL, DEFAULT now()
    UNIQUE(provider, event_key)
}

entity "order_items" as order_items{
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +order_id: BIGINT
    'REFERENCES orders(id) ON DELETE CASCADE / NOT NULL
    ---
    product_id: BIGINT
    'NOT NULL
    product_name: VARCHAR(100)
    'NOT NULL
    quantity: INT
    'CHECK (quantity > 0), NOT NULL
    unit_price: INT
    'CHECK (unit_price >= 0), NOT NULL
    total_price: INT
    'NOT NULL
}

entity "cart_items" as cart_items {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +cart_id: BIGINT
    'REFERENCES carts(id) ON DELETE CASCADE / NOT NULL
    +product_id: BIGINT
    'REFERENCES products(id) ON DELETE CASCADE / NOT NULL
    ---
    quantity: INT
    'NOT NULL, CHECK (quantity > 0) DEFAULT 1
    unit_price: INT
    'NOT NULL, CHECK (unit_price >= 0)
}


entity "tags" as tags{
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    name: VARCHAR(50)
    'NOT NULL
}
entity "product_tags" as product_tags {
    *PRIMARY KEY (product_id, tag_id)
    ---
    +product_id: BIGINT
    'REFERENCES products(id) ON DELETE CASCADE / NOT NULL
    +tag_id: BIGINT
    'REFERENCES tags(id) ON DELETE CASCADE / NOT NULL

}

entity "tokens" as tokens {
    *id: BIGSERIAL
    'PRIMARY KEY
    ---
    +user_id: BIGINT
    'REFERENCES users(id) ON DELETE CASCADE / NOT NULL
    ---
    token: VARCHAR(255)
    'NOT NULL
    token_type: VARCHAR(50)
    'forgetPassword, emailVerification / NOT NULL
    used: BOOLEAN
    'NOT NULL, DEFAULT: false
    created_at: TIMESTAMPTZ
    'NOT NULL, DEFAULT: now()
    expires_at: TIMESTAMPTZ
    'NOT NULL
}

tag ||--o{ product_tags
products ||--o{ product_tags
carts }o--|| users
carts ||--o{ cart_items
products ||--o{ cart_items
orders }o--|| users
orders ||--o{ order_items
orders ||--o{ payments
products }o--|| promotions
products }o--|| categories
payments ||--o{ payment_transactions
payments ||--o{ refunds
tokens }o--|| users

@enduml